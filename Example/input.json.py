{
    "计分板名称":"\"Happy2018new\"", # 计分板名称(这里加了引号 \" 说明需要的时候你得手动加！)
    "结构体": # 结构体(数量不作限制，可以超过传统的 4 个)
    [
        {
            "分数条件":[8,12],
            # 当 @s[scores={Happy2018new=8..12}] 可以选中时依次显示 内容 中的所有元素
            # 如果 内容 内有嵌套，则根据 嵌套 内提供的 分数条件 决定对应的内容是否显示
            "嵌套位置":[2,3], # 在 内容 的第二项和第三项嵌套一个 {"计分板名称":"","结构体":[]}
            "内容":
            [
                {"text":"不好"}, # 第一项内容
                {
                    "计分板名称":"abcd", # 计分板名称(通常情况下不需要手动加引号)
                    "结构体": # 同第 3 行注释
                    [
                        {
                            "分数条件":[-1,2],
                            # 当 @s[scores={Happy2018new=-1..2}] 可以选中时依次显示 内容 中的所有元素
                            # 如果 内容 内有嵌套，则根据 嵌套 内提供的 分数条件 决定对应的内容是否显示
                            "嵌套位置":[],
                            # 这里列表是空的，说明 内容 里面没有要嵌套 {"计分板名称":"","结构体":[]} 的元素
                            "内容":
                            [
                                {"scores":{"objective":"√","name":"*"}},
                                # 这个是显示分数，好像是这样写的，我太久没用不记得了
                                {"text":"测试"}
                                # 众所周知，你可能需要显示很多个东西，所以你可以发现这个
                                # “内容”是个列表
                            ]
                        }
                    ]
                },
                {
                    "计分板名称":"\"123\"", # 计分板名称(这里必须加引号了)
                    "结构体": # 同第 3 行注释
                    [
                        {
                            "分数条件":[-233,-22],
                            # 当 @s[scores={Happy2018new=-233..-22}] 可以选中时依次显示 内容 中的所有元素
                            # 如果 内容 内有嵌套，则根据 嵌套 内提供的 分数条件 决定对应的内容是否显示
                            "嵌套位置":[],
                            # 这里列表是空的，说明 内容 里面没有要嵌套 {"计分板名称":"","结构体":[]} 的元素
                            "内容":
                            [
                                # 空的就什么都不显示呗~
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}

# 文件名字应该是 input.json ，用 .py 作为后缀名只是为了方便注释
# 你可以无限嵌套下去。我并没有在代码中限制递归深度。但是 python 自己有默认的递归深度，也就是 1000
# 不过，递归 1000 次的话，可能命令方块都塞不下指令吧
# 除非，你是禽兽？？
